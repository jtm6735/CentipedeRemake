/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/classes.js":
/*!***********************!*\
  !*** ./js/classes.js ***!
  \***********************/
/*! exports provided: createMushroomSprites, createPlayerSprite, fireBullets, createCentipede */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMushroomSprites\", function() { return createMushroomSprites; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPlayerSprite\", function() { return createPlayerSprite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fireBullets\", function() { return fireBullets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCentipede\", function() { return createCentipede; });\n\r\n\r\nclass baseSprite{\r\n constructor(x,y,width,height,speed,image){\r\n        this.x=x;\r\n        this.y=y;\r\n        this.width=width;\r\n        this.height=height;\r\n        //this.color=color;\r\n        this.speed=speed;\r\n        this.image=image;\r\n    \t// other properties\r\n\t\tthis.dx = 0; // per second\r\n\t\tthis.dy = 0; // per second\r\n\t}\r\n\t\r\n\tupdate(dt){\r\n\t\tthis.x += this.dx * dt;\r\n\t\tthis.y += this.dy * dt;\r\n\t}\r\n\r\n       draw(ctx){\r\n        ctx.save();\r\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nclass mushroom extends baseSprite{\r\n    constructor(x,y,radius,color){\r\n        super(x,y);\r\n        this.x=x;\r\n        this.y=y;\r\n        this.radius=radius;\r\n        this.color=color;\r\n    }\r\n        draw(ctx){\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.fillStyle=this.color;\r\n        ctx.arc(this.x,this.y,this.radius,0,Math.PI*2,false);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nclass player extends baseSprite{\r\n    constructor(x,y,width,height,speed,image){\r\n        super(x,y,width,height,speed,image);\r\n        this.x=x;\r\n        this.y=y;\r\n        this.width=width;\r\n        this.height=height;\r\n        //this.color=color;\r\n        this.speed=speed;\r\n        this.image=image;\r\n    \t// other properties\r\n\t\tthis.dx = 0; // per second\r\n\t\tthis.dy = 0; // per second\r\n\t}\r\n\t\r\n\tupdate(dt){\r\n\t\tthis.x += this.dx * dt;\r\n\t\tthis.y += this.dy * dt;\r\n\t}\r\n\r\n       draw(ctx){\r\n        ctx.save();\r\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nclass centipede extends baseSprite{\r\n    constructor(x,y,width,height,speed,image,faceBool){\r\n        super(x,y,width,height,speed,image);\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.speed = speed;\r\n        this.image = image;\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.boolValue=faceBool;\r\n    }\r\n    \r\n    update(dt){\r\n        this.x += this.dx * dt;\r\n        this.y += this.dy * dt;\r\n    }\r\n    \r\n    draw(ctx){\r\n        ctx.save();\r\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nclass bullets extends baseSprite{\r\n    constructor(x,y,width,height,speed,image){\r\n        super(x,y,width,height,speed,image);\r\n        this.x=x;\r\n        this.y=y;\r\n        this.width=width;\r\n        this.height=height;\r\n        //this.color=color;\r\n        this.speed=speed;\r\n        this.image=image;\r\n    \t// other properties\r\n\t\tthis.dx = 0; // per second\r\n        this.dy = 0; // per second \r\n    }\r\n    update(dt){\r\n\t\tthis.x += this.dx * dt;\r\n\t\tthis.y += this.dy * dt;\r\n    }\r\n    draw(ctx){\r\n        ctx.save();\r\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction createMushroomSprites(rect = {left: 0,top: 0,width: 300,height: 300},x,y,width,height,url){\r\n         let image = new Image();\r\n         image.src = url;\r\n         let mushroom= new baseSprite(x,y,width,height,0,image)\r\n         return mushroom;\r\n}\r\n\r\nfunction createPlayerSprite(rect={left: 0,top: 0,width: 300,height: 300},width,height,speed,url){\r\n    let image = new Image();\r\n    image.src = url; \r\n    let ship = new baseSprite(200,650,width,height,speed,image);\r\n    return ship;\r\n}\r\n\r\nfunction fireBullets(rect={left: 0,top: 0,width: 300,height: 300},x,y,speed,url){\r\n    let image = new Image();\r\n    image.src = url; \r\n    let bullet = new baseSprite(x,y,10,10,speed,image);\r\n    return bullet;\r\n}\r\n\r\nfunction createCentipede(rect={left: 0,top: 0,width: 300,height: 300}, x,y, speed, url,boolean){\r\n      //let centiLoop = [];\r\n     //for (let i = 0; i < num; i++) {\r\n        let image = new Image();\r\n        image.src = url;\r\n        let newCentipede = new centipede(x,y,30,20,speed,image,boolean);\r\n        return newCentipede;\r\n        //centiLoop.push(newCentipede);\r\n     //}\r\n    //return centiLoop;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9jbGFzc2VzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vanMvY2xhc3Nlcy5qcz9iZDZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5leHBvcnR7Y3JlYXRlTXVzaHJvb21TcHJpdGVzLGNyZWF0ZVBsYXllclNwcml0ZSxmaXJlQnVsbGV0cyxjcmVhdGVDZW50aXBlZGV9O1xyXG5jbGFzcyBiYXNlU3ByaXRle1xyXG4gY29uc3RydWN0b3IoeCx5LHdpZHRoLGhlaWdodCxzcGVlZCxpbWFnZSl7XHJcbiAgICAgICAgdGhpcy54PXg7XHJcbiAgICAgICAgdGhpcy55PXk7XHJcbiAgICAgICAgdGhpcy53aWR0aD13aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodD1oZWlnaHQ7XHJcbiAgICAgICAgLy90aGlzLmNvbG9yPWNvbG9yO1xyXG4gICAgICAgIHRoaXMuc3BlZWQ9c3BlZWQ7XHJcbiAgICAgICAgdGhpcy5pbWFnZT1pbWFnZTtcclxuICAgIFx0Ly8gb3RoZXIgcHJvcGVydGllc1xyXG5cdFx0dGhpcy5keCA9IDA7IC8vIHBlciBzZWNvbmRcclxuXHRcdHRoaXMuZHkgPSAwOyAvLyBwZXIgc2Vjb25kXHJcblx0fVxyXG5cdFxyXG5cdHVwZGF0ZShkdCl7XHJcblx0XHR0aGlzLnggKz0gdGhpcy5keCAqIGR0O1xyXG5cdFx0dGhpcy55ICs9IHRoaXMuZHkgKiBkdDtcclxuXHR9XHJcblxyXG4gICAgICAgZHJhdyhjdHgpe1xyXG4gICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmltYWdlLCB0aGlzLngsIHRoaXMueSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIG11c2hyb29tIGV4dGVuZHMgYmFzZVNwcml0ZXtcclxuICAgIGNvbnN0cnVjdG9yKHgseSxyYWRpdXMsY29sb3Ipe1xyXG4gICAgICAgIHN1cGVyKHgseSk7XHJcbiAgICAgICAgdGhpcy54PXg7XHJcbiAgICAgICAgdGhpcy55PXk7XHJcbiAgICAgICAgdGhpcy5yYWRpdXM9cmFkaXVzO1xyXG4gICAgICAgIHRoaXMuY29sb3I9Y29sb3I7XHJcbiAgICB9XHJcbiAgICAgICAgZHJhdyhjdHgpe1xyXG4gICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGU9dGhpcy5jb2xvcjtcclxuICAgICAgICBjdHguYXJjKHRoaXMueCx0aGlzLnksdGhpcy5yYWRpdXMsMCxNYXRoLlBJKjIsZmFsc2UpO1xyXG4gICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICBjdHgucmVzdG9yZSgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBwbGF5ZXIgZXh0ZW5kcyBiYXNlU3ByaXRle1xyXG4gICAgY29uc3RydWN0b3IoeCx5LHdpZHRoLGhlaWdodCxzcGVlZCxpbWFnZSl7XHJcbiAgICAgICAgc3VwZXIoeCx5LHdpZHRoLGhlaWdodCxzcGVlZCxpbWFnZSk7XHJcbiAgICAgICAgdGhpcy54PXg7XHJcbiAgICAgICAgdGhpcy55PXk7XHJcbiAgICAgICAgdGhpcy53aWR0aD13aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodD1oZWlnaHQ7XHJcbiAgICAgICAgLy90aGlzLmNvbG9yPWNvbG9yO1xyXG4gICAgICAgIHRoaXMuc3BlZWQ9c3BlZWQ7XHJcbiAgICAgICAgdGhpcy5pbWFnZT1pbWFnZTtcclxuICAgIFx0Ly8gb3RoZXIgcHJvcGVydGllc1xyXG5cdFx0dGhpcy5keCA9IDA7IC8vIHBlciBzZWNvbmRcclxuXHRcdHRoaXMuZHkgPSAwOyAvLyBwZXIgc2Vjb25kXHJcblx0fVxyXG5cdFxyXG5cdHVwZGF0ZShkdCl7XHJcblx0XHR0aGlzLnggKz0gdGhpcy5keCAqIGR0O1xyXG5cdFx0dGhpcy55ICs9IHRoaXMuZHkgKiBkdDtcclxuXHR9XHJcblxyXG4gICAgICAgZHJhdyhjdHgpe1xyXG4gICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmltYWdlLCB0aGlzLngsIHRoaXMueSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIGNlbnRpcGVkZSBleHRlbmRzIGJhc2VTcHJpdGV7XHJcbiAgICBjb25zdHJ1Y3Rvcih4LHksd2lkdGgsaGVpZ2h0LHNwZWVkLGltYWdlLGZhY2VCb29sKXtcclxuICAgICAgICBzdXBlcih4LHksd2lkdGgsaGVpZ2h0LHNwZWVkLGltYWdlKTtcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuc3BlZWQgPSBzcGVlZDtcclxuICAgICAgICB0aGlzLmltYWdlID0gaW1hZ2U7XHJcbiAgICAgICAgdGhpcy5keCA9IDA7XHJcbiAgICAgICAgdGhpcy5keSA9IDA7XHJcbiAgICAgICAgdGhpcy5ib29sVmFsdWU9ZmFjZUJvb2w7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHVwZGF0ZShkdCl7XHJcbiAgICAgICAgdGhpcy54ICs9IHRoaXMuZHggKiBkdDtcclxuICAgICAgICB0aGlzLnkgKz0gdGhpcy5keSAqIGR0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBkcmF3KGN0eCl7XHJcbiAgICAgICAgY3R4LnNhdmUoKTtcclxuICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIHRoaXMueCwgdGhpcy55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICAgICAgY3R4LnJlc3RvcmUoKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgYnVsbGV0cyBleHRlbmRzIGJhc2VTcHJpdGV7XHJcbiAgICBjb25zdHJ1Y3Rvcih4LHksd2lkdGgsaGVpZ2h0LHNwZWVkLGltYWdlKXtcclxuICAgICAgICBzdXBlcih4LHksd2lkdGgsaGVpZ2h0LHNwZWVkLGltYWdlKTtcclxuICAgICAgICB0aGlzLng9eDtcclxuICAgICAgICB0aGlzLnk9eTtcclxuICAgICAgICB0aGlzLndpZHRoPXdpZHRoO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0PWhlaWdodDtcclxuICAgICAgICAvL3RoaXMuY29sb3I9Y29sb3I7XHJcbiAgICAgICAgdGhpcy5zcGVlZD1zcGVlZDtcclxuICAgICAgICB0aGlzLmltYWdlPWltYWdlO1xyXG4gICAgXHQvLyBvdGhlciBwcm9wZXJ0aWVzXHJcblx0XHR0aGlzLmR4ID0gMDsgLy8gcGVyIHNlY29uZFxyXG4gICAgICAgIHRoaXMuZHkgPSAwOyAvLyBwZXIgc2Vjb25kIFxyXG4gICAgfVxyXG4gICAgdXBkYXRlKGR0KXtcclxuXHRcdHRoaXMueCArPSB0aGlzLmR4ICogZHQ7XHJcblx0XHR0aGlzLnkgKz0gdGhpcy5keSAqIGR0O1xyXG4gICAgfVxyXG4gICAgZHJhdyhjdHgpe1xyXG4gICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmltYWdlLCB0aGlzLngsIHRoaXMueSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZU11c2hyb29tU3ByaXRlcyhyZWN0ID0ge2xlZnQ6IDAsdG9wOiAwLHdpZHRoOiAzMDAsaGVpZ2h0OiAzMDB9LHgseSx3aWR0aCxoZWlnaHQsdXJsKXtcclxuICAgICAgICAgbGV0IGltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgIGltYWdlLnNyYyA9IHVybDtcclxuICAgICAgICAgbGV0IG11c2hyb29tPSBuZXcgYmFzZVNwcml0ZSh4LHksd2lkdGgsaGVpZ2h0LDAsaW1hZ2UpXHJcbiAgICAgICAgIHJldHVybiBtdXNocm9vbTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlUGxheWVyU3ByaXRlKHJlY3Q9e2xlZnQ6IDAsdG9wOiAwLHdpZHRoOiAzMDAsaGVpZ2h0OiAzMDB9LHdpZHRoLGhlaWdodCxzcGVlZCx1cmwpe1xyXG4gICAgbGV0IGltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICBpbWFnZS5zcmMgPSB1cmw7IFxyXG4gICAgbGV0IHNoaXAgPSBuZXcgYmFzZVNwcml0ZSgyMDAsNjUwLHdpZHRoLGhlaWdodCxzcGVlZCxpbWFnZSk7XHJcbiAgICByZXR1cm4gc2hpcDtcclxufVxyXG5cclxuZnVuY3Rpb24gZmlyZUJ1bGxldHMocmVjdD17bGVmdDogMCx0b3A6IDAsd2lkdGg6IDMwMCxoZWlnaHQ6IDMwMH0seCx5LHNwZWVkLHVybCl7XHJcbiAgICBsZXQgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgIGltYWdlLnNyYyA9IHVybDsgXHJcbiAgICBsZXQgYnVsbGV0ID0gbmV3IGJhc2VTcHJpdGUoeCx5LDEwLDEwLHNwZWVkLGltYWdlKTtcclxuICAgIHJldHVybiBidWxsZXQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNlbnRpcGVkZShyZWN0PXtsZWZ0OiAwLHRvcDogMCx3aWR0aDogMzAwLGhlaWdodDogMzAwfSwgeCx5LCBzcGVlZCwgdXJsLGJvb2xlYW4pe1xyXG4gICAgICAvL2xldCBjZW50aUxvb3AgPSBbXTtcclxuICAgICAvL2ZvciAobGV0IGkgPSAwOyBpIDwgbnVtOyBpKyspIHtcclxuICAgICAgICBsZXQgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICBpbWFnZS5zcmMgPSB1cmw7XHJcbiAgICAgICAgbGV0IG5ld0NlbnRpcGVkZSA9IG5ldyBjZW50aXBlZGUoeCx5LDMwLDIwLHNwZWVkLGltYWdlLGJvb2xlYW4pO1xyXG4gICAgICAgIHJldHVybiBuZXdDZW50aXBlZGU7XHJcbiAgICAgICAgLy9jZW50aUxvb3AucHVzaChuZXdDZW50aXBlZGUpO1xyXG4gICAgIC8vfVxyXG4gICAgLy9yZXR1cm4gY2VudGlMb29wO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./js/classes.js\n");

/***/ }),

/***/ "./js/collision.js":
/*!*************************!*\
  !*** ./js/collision.js ***!
  \*************************/
/*! exports provided: aabbCollision */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aabbCollision\", function() { return aabbCollision; });\n\r\n\r\nfunction aabbCollision(xPos, xPos2, yPos, yPos2, width, width2, height, height2){\r\n    if(xPos < xPos2 + width2 &&\r\n       xPos + width > xPos2 &&\r\n       yPos < yPos2 + height2 &&\r\n       height + yPos > yPos2){\r\n        return true;\r\n        console.log(\"collision\");\r\n    }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9jb2xsaXNpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9jb2xsaXNpb24uanM/NjUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2FhYmJDb2xsaXNpb259O1xyXG5cclxuZnVuY3Rpb24gYWFiYkNvbGxpc2lvbih4UG9zLCB4UG9zMiwgeVBvcywgeVBvczIsIHdpZHRoLCB3aWR0aDIsIGhlaWdodCwgaGVpZ2h0Mil7XHJcbiAgICBpZih4UG9zIDwgeFBvczIgKyB3aWR0aDIgJiZcclxuICAgICAgIHhQb3MgKyB3aWR0aCA+IHhQb3MyICYmXHJcbiAgICAgICB5UG9zIDwgeVBvczIgKyBoZWlnaHQyICYmXHJcbiAgICAgICBoZWlnaHQgKyB5UG9zID4geVBvczIpe1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiY29sbGlzaW9uXCIpO1xyXG4gICAgfVxyXG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./js/collision.js\n");

/***/ }),

/***/ "./js/init.js":
/*!********************!*\
  !*** ./js/init.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.js */ \"./js/main.js\");\n\r\nObject(_main_js__WEBPACK_IMPORTED_MODULE_0__[\"init\"])();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9pbml0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vanMvaW5pdC5qcz82OWJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5pdH0gZnJvbSAnLi9tYWluLmpzJztcclxuaW5pdCgpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./js/init.js\n");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return init; });\n/* harmony import */ var _classes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes.js */ \"./js/classes.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities.js */ \"./js/utilities.js\");\n/* harmony import */ var _collision_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collision.js */ \"./js/collision.js\");\n/* harmony import */ var _tintChange_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tintChange.js */ \"./js/tintChange.js\");\n// \r\n\r\n\r\n// Imports the given functions from the other named js files\r\n// These imports only work because the imports recieve because the functions \r\n// in the other files are being exported\r\n\r\n\r\n\r\n\r\n\r\n// Exporting our own init function into the main.html so that\r\n// is ran when the window opens\r\n\r\n\r\n// Const variables are set, these variables will never\r\n// change. These variables are essentially what control\r\n// the properites or elements of the canvas\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst screenWidth = 600;\r\nconst screenHeight = 800;\r\n\r\n// This const will save our game states\r\n// We will be able to access these GameStates \r\n// later in the code\r\nconst GameState=Object.freeze({\r\n    START: Symbol(\"START\"),\r\n    MAIN: Symbol(\"MAIN\"),\r\n    GAMEOVER: Symbol(\"GAMEOVER\"),\r\n    PAUSED: Symbol(\"PAUSED\")\r\n    \r\n});\r\n\r\n// The const will save keycodes\r\n// for buttons on the keyboard\r\nconst keyboard = Object.freeze({\r\n\tSPACE: \t\t32,\r\n\tLEFT: \t\t37, \r\n\tUP: \t\t38, \r\n\tRIGHT: \t\t39, \r\n\tDOWN: \t\t40\r\n});\r\n\r\nconst keys = [];\r\n\r\n// These are the local variables\r\n// that will be used throughtout\r\n// the main.js\r\nlet backgroundSound;\r\nlet laserSound;\r\nlet hitSound;\r\nlet shipFire;\r\nlet gameState = GameState.START;\r\nlet backGroundImage = new Image();\r\nlet imageData;\r\nlet mushrooms = [];\r\nlet bullets = [];\r\nlet centipedes = [];\r\nlet currentLevel = 1;\r\nlet player;\r\nlet totalScore;\r\nlet levelScore;\r\nlet cageCount;\r\nlet margin = 50;\r\nlet rand;\r\nlet counter=10;\r\nlet delta=0;\r\nlet lastFrameTimeMS = 0;\r\nlet score;\r\nlet isPaused=null;\r\n\r\n// The two, rect and rectS, will be used \r\n// to check the screensize which the objects are in\r\nlet rect = {left: margin, top: margin, width: screenWidth - margin*2, height: screenHeight-margin*2}\r\nlet rectS = {left: margin, top: margin, width: screenWidth - margin*2, height: screenHeight-margin*3}\r\n\r\n// The init function is used to initialize\r\n// elements as soon as the window opens.\r\n// Information regarding the backgroundImage\r\n// and sound are set in the init. The init\r\n// is also where we create the initial centipede\r\n// and mushrooms in their own seperate arrays.\r\nfunction init(argImageData){\r\n    backGroundImage.src = \"images/centiBackground.png\";\r\n    backgroundSound= new sound(\"audio/komiku58.mp3\");   \r\n    laserSound = new sound(\"audio/laser1.wav\");\r\n    hitSound = new sound(\"audio/attack_hit.mp3\");\r\n    imageData = argImageData;\r\n    score = 0;\r\n    isPaused=window;\r\n    isPaused.onblur=paused;\r\n    isPaused.onfocus=play;\r\n    \r\n    \r\n\t\r\n    for(let i=0;i<10;i++){\r\n         centipedes.push(Object(_classes_js__WEBPACK_IMPORTED_MODULE_0__[\"createCentipede\"])(rectS,(300-(i*30)),60, .3, \"images/centipedeHeadfRight.png\",false));\r\n    }\r\n   \r\n    player = Object(_classes_js__WEBPACK_IMPORTED_MODULE_0__[\"createPlayerSprite\"])(rectS,40,40,.4,\"images/centiShip.png\");\r\n     // bullets = createBullets(rectS,player.x, player.y, .3, \"images/testBullets.png\");\r\n    spawnMushrooms();\r\n    canvas.onmousedown = doMousedown;\r\n    loop();\r\n}\r\n\r\n// The loop function will run the animation\r\n// for the program. Because of this, the loop\r\n// also deals with the delta time which controls\r\n// the movement of the objects. Lastly, the hud is redrawn\r\n// in the loop so that multiple objects are not\r\n// repeatedly drawn on screen\r\nfunction loop(timestamp){\r\n\trequestAnimationFrame(loop);\r\n    delta=timestamp-lastFrameTimeMS;\r\n    lastFrameTimeMS=timestamp;\r\n    drawHUD(ctx);\r\n   \r\n}\r\n\r\n// The function drawHUD has three different \r\n// states on it which vary depending on which GameState \r\n// is being accessed.\r\nfunction drawHUD(ctx){\r\n    \r\n\r\n    ctx.save();\r\n    switch(gameState){\r\n        // In the GameState.Start, text is drawn\r\n        // in order to show off what the title screen\r\n        // is.\r\n        case GameState.START:\r\n            ctx.textAlign = \"center\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.save();\r\n            ctx.fillStyle = \"purple\";\r\n            ctx.rect(0,0,600,800);\r\n            ctx.fill();\r\n            ctx.restore();\r\n            fillText(ctx,\"Centipede!\",screenWidth/2, screenHeight/2-200, \"36pt 'Press Start 2P', cursive\", \"red\");\r\n            strokeText(ctx,\"Centipede!\",screenWidth/2, screenHeight/2-200, \"36pt 'Press Start 2P', cursive\", \"white\", 2);\r\n\t\t\tfillText(ctx,\"Press Anywhere to Start\",screenWidth/2, screenHeight/2+150, \"14pt 'Press Start 2P', cursive\", \"blue\");\r\n            strokeText(ctx,\"Press Anywhere to Start\",screenWidth/2, screenHeight/2+150, \"14pt 'Press Start 2P', cursive\", \"white\",.5);\r\n            fillText(ctx,\"Use the arrow keys to move!\",screenWidth/2, screenHeight/2+250, \"14pt 'Press Start 2P', cursive\", \"blue\");\r\n            strokeText(ctx,\"Use the arrow keys to move!\",screenWidth/2, screenHeight/2+250, \"14pt 'Press Start 2P', cursive\", \"white\",.5);\r\n            fillText(ctx,\"Use spacebar to shoot!\",screenWidth/2, screenHeight/2+350, \"14pt 'Press Start 2P', cursive\", \"blue\");\r\n            strokeText(ctx,\"Use spacebar to shoot!\",screenWidth/2, screenHeight/2+350, \"14pt 'Press Start 2P', cursive\", \"white\",.5);\r\n            break;\r\n        \r\n        // In the GameState.Main, we will be checking\r\n        // the key daemons in order to have fluid motion.\r\n        // This is accomplished by using key daemons similar\r\n        // to how one would use a bool. This allows for multiple\r\n        // inputs to be recording at once without stuttering movement\r\n        case GameState.MAIN:\r\n\t       if (keys[keyboard.DOWN] /*|| char ==\"s\" || char == \"S\"*/){\r\n                if(player.y+player.height+player.dy<=800){\r\n                    player.dy=player.speed;\r\n                }       \r\n            }\r\n            else if(keys[keyboard.UP]/* || char ==\"w\" || char == \"W\"*/){\r\n                if(player.y >= 600){\r\n                    player.dy=-player.speed; \r\n                }\r\n            }\r\n            else{\r\n                player.dy=0;        \r\n            }\r\n            if(keys[keyboard.LEFT] /*|| char ==\"a\" || char == \"A\"*/){\r\n                if(player.x>=0){\r\n                    player.dx=-player.speed;  \r\n                }\r\n            }\r\n            else if(keys[keyboard.RIGHT] /*|| char ==\"d\" || char == \"D\"*/){\r\n                if(player.x+player.width+player.dx<= 600){\r\n                    player.dx=player.speed;\r\n                }\r\n            }\r\n            else{\r\n                player.dx=0;        \r\n            }\r\n            \r\n            // The background image is constantly beign redrawn\r\n            // so that multiple images are not left on the screen\r\n            // where images have already passed over.\r\n            ctx.save();\r\n            ctx.drawImage(backGroundImage,-75,-90);\r\n            ctx.restore();\r\n            \r\n            ctx.save();\r\n            // Loading into the second screen solely\r\n            // The loop will make it so that the \r\n            // song will loop on end.\r\n            backgroundSound.loop=true;\r\n            backgroundSound.play();\r\n            ctx.restore();\r\n            \r\n            // This text keeps track of the player's score\r\n            // in the upper left hand corner\r\n            fillText(ctx,\"Score: \" + score, 50, 30, \"20pt 'Press Start 2P', cursive\", \"black\");\r\n            strokeText(ctx,\"Score: \" + score,50, 30, \"20pt 'Press Start 2P', cursive\", \"white\", 1);\r\n            \r\n            // In the initial run of the MAIN gameState,\r\n            // the mushrooms are drawn onto the screen\r\n            ctx.save();\r\n            for(let m of mushrooms){\r\n                m.draw(ctx);\r\n            }\r\n            ctx.restore();\r\n            \r\n            // These checks are here to check if the player's\r\n            // avatar hits the boundaries of the box. If so,\r\n            // the player will bounce back in the opposite direction\r\n            // of which they hit the box.\r\n            if(player.x+player.width+player.dx>= 610){\r\n                player.dx = -player.speed/2;\r\n            }\r\n            if(player.x <= -10){\r\n                player.dx = player.speed/2;\r\n            }\r\n            if(player.y <= 580){\r\n                player.dy = player.speed/2;\r\n            }\r\n            if(player.y+player.height+player.dy >= 810){\r\n                player.dy = -player.speed/2;\r\n            }\r\n            player.draw(ctx);\r\n\r\n            // Bullets are drawn and moved\r\n            // in coordinance with delta time.\r\n            // There is a boundary check for\r\n            // the bullets where if they hit the top,\r\n            // the bullets are removed from their array\r\n            ctx.save();\r\n            for(let x of bullets){\r\n                x.draw(ctx);\r\n                x.dy=-x.speed;\r\n                x.update(delta);\r\n                    if(x.y <= 0){\r\n                        remove(bullets,x);\r\n                    }\r\n            }\r\n            ctx.restore();\r\n            \r\n            // The centipedes are drawn into an array.\r\n            // In these lines of code, the centipede goes\r\n            // through multiple checks regarding if it is\r\n            // hitting a wall. When the centipede hits the wall,\r\n            // its image is changed in order to match the new direction\r\n            // it is facing. The centipede also speeds up, to a certain\r\n            // limit whenever it hits a wall.\r\n            ctx.save();\r\n            for(let c of centipedes){\r\n                c.draw(ctx);\r\n                c.dx = c.speed;\r\n                if(c.x+c.width+c.dx >=600){\r\n                    let reverse = new Image();\r\n                    reverse.src =\"images/centipedeHeadfLeft.png\";\r\n                    c.x =550;\r\n                    c.y=c.y+20;\r\n                    if(c.speed<=.48){\r\n                        console.log(\"speed \"+c.speed)\r\n                        c.speed *= 1.08; \r\n                    }\r\n                    c.speed = -c.speed;\r\n                    if(c.boolValue==false){\r\n                         c.image =reverse;\r\n                         c.boolValue=true;\r\n                    }\r\n                }\r\n                if(c.x+c.dx<= 0){\r\n                    let forward = new Image();\r\n                    forward.src=\"images/centipedeHeadfRight.png\";\r\n                    c.x=10;\r\n                    c.y=c.y+20;\r\n                     if(c.speed>= -.48){\r\n                         console.log(\"speed \"+c.speed)\r\n                       c.speed *= 1.08; \r\n                    }\r\n                     c.speed = -c.speed;\r\n                   if(c.boolValue==true){\r\n                         c.image =forward;\r\n                        c.boolValue=false;\r\n                    }\r\n                }\r\n                if(c.y+c.height+c.dy>=800){\r\n                    c.y= 20;\r\n                }\r\n                 c.update(delta);    \r\n            }\r\n            \r\n            // These combined for loops check for the collision\r\n            // between any centipede and bullet. Using aabb collision,\r\n            // if any of the two objects collide with one another, both\r\n            // objects are removed from their respective array and a sound effect\r\n            // is played in order to signal the collision. A counter is used to \r\n            // the number of centipedes spawned each time the array of centipedes\r\n            // is cleared out.\r\n            for(let x of centipedes){\r\n                for(let y of bullets){\r\n                    if(Object(_collision_js__WEBPACK_IMPORTED_MODULE_2__[\"aabbCollision\"])(x.x,y.x,x.y,y.y,x.width,y.width,x.height,y.height)){\r\n                        hitSound.play();\r\n                        remove(bullets, y);\r\n                        remove(centipedes, x);\r\n                        mushrooms.push(Object(_classes_js__WEBPACK_IMPORTED_MODULE_0__[\"createMushroomSprites\"])(rectS,x.x,x.y,20,20,\"images/depressedMush.png\"));\r\n                        score += 20;\r\n                        if(centipedes.length <= 0){\r\n                            spawnMushrooms();\r\n                            for(let i = 0; i <counter ; i++){\r\n                                centipedes.push(Object(_classes_js__WEBPACK_IMPORTED_MODULE_0__[\"createCentipede\"])(rectS,(300-(i*24)),60, x.speed=x.speed+.001, \"images/centipedeHeadfRight.png\",false));   \r\n                            }\r\n                            counter+=2\r\n                        } \r\n                    }\r\n                }\r\n            }\r\n            \r\n            // These combined for loops, like the prior one, checks \r\n            // for aabb collision with the mushrooms and the bullets.\r\n            // If these objects collide, then both are destroyed and removed from\r\n            // their arrays. No sound effect is played then these hit.\r\n            for(let x of mushrooms){\r\n                for(let y of bullets){\r\n                    if(Object(_collision_js__WEBPACK_IMPORTED_MODULE_2__[\"aabbCollision\"])(x.x,y.x,x.y,y.y,x.width,y.width,x.height,y.height)){\r\n                        remove(bullets, y);\r\n                        remove(mushrooms, x);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // These combined for loops check for the collision between the\r\n            // centipedes and the mushrooms. Similar to the boundary check above,\r\n            // if a centipede htis a mushroom, it will turn the opposite direction it\r\n            // came and start moving that way. \r\n            for(let x of centipedes){\r\n                for(let y of mushrooms){\r\n                    if(Object(_collision_js__WEBPACK_IMPORTED_MODULE_2__[\"aabbCollision\"])(x.x,y.x,x.y,y.y,x.width,y.width,x.height,y.height)){\r\n                       x.speed = -x.speed;\r\n                        x.y = x.y + 20;\r\n                        //faceImg=!faceImg;\r\n                        \r\n                        if(x.boolValue == false){\r\n                            let reverse = new Image();\r\n                            reverse.src =\"images/centipedeHeadfLeft.png\";\r\n                            x.image = reverse;\r\n                            x.boolValue = true;\r\n                        }\r\n                        else if(x.boolValue==true){\r\n                            let forward = new Image();\r\n                            forward.src=\"images/centipedeHeadfRight.png\";\r\n                            x.image=forward;\r\n                            x.boolValue = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // This for loop checks for a collision between any centipede object\r\n            // and the pleyer's spaceship avatar. If there is a collision,\r\n            // the player dies and is sent to the game over screen.\r\n            for (let x of centipedes){\r\n                if(Object(_collision_js__WEBPACK_IMPORTED_MODULE_2__[\"aabbCollision\"])(player.x,x.x,player.y,x.y,player.width,x.width,player.height,x.height)){\r\n                    gameState = GameState.GAMEOVER;\r\n                     console.log(\"game over\");\r\n                }\r\n            }\r\n            ctx.restore(); \r\n            player.update(delta);\r\n            break;\r\n            \r\n        // This gameState is accesssed by clicking off the \r\n        // window of the game. On this screen, the palyer will be \r\n        // greeted with text saying that they are on the loading screen.\r\n        case GameState.PAUSED:\r\n            backgroundSound.stop();\r\n            ctx.save();\r\n            ctx.textAlign = \"center\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.save();\r\n            ctx.fillStyle = \"purple\";\r\n            ctx.rect(0,0,600,800);\r\n            ctx.fill();\r\n            ctx.restore();\r\n            fillText(ctx,\"Paused\",screenWidth/2, screenHeight/2, \"36pt 'Press Start 2P', cursive\", \"red\");\r\n            strokeText(ctx,\"Paused\",screenWidth/2, screenHeight/2, \"36pt 'Press Start 2P', cursive\", \"white\", 2);\r\n            ctx.restore();\r\n            break;\r\n            \r\n        // This gameState is accessed when the player is hit \r\n        // by a centipede. On this screen, the music stops playing\r\n        // and the player is given their final score.\r\n        case GameState.GAMEOVER:\r\n            backgroundSound.stop();\r\n            ctx.save();\r\n            ctx.textAlign = \"center\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.save();\r\n            ctx.fillStyle = \"purple\";\r\n            ctx.rect(0,0,600,800);\r\n            ctx.fill();\r\n            ctx.restore();\r\n            fillText(ctx,\"Game over!\",screenWidth/2, screenHeight/2, \"36pt 'Press Start 2P', cursive\", \"red\");\r\n            strokeText(ctx,\"Game over!\",screenWidth/2, screenHeight/2, \"36pt 'Press Start 2P', cursive\", \"white\", 2);\r\n            fillText(ctx,\"Score: \" + score, screenWidth/2, screenHeight/2 +150, \"20pt 'Press Start 2P', cursive\", \"black\");\r\n            strokeText(ctx,\"Score: \" + score,screenWidth/2, screenHeight/2 + 150, \"20pt 'Press Start 2P', cursive\", \"white\", 1);\r\n            ctx.restore();\r\n            break;\r\n            \r\n        default:\r\n            throw new Error(MyErrors.drawHUDswitch);\r\n            \r\n    }\r\n    ctx.restore();\r\n}\r\n\r\n//\r\nfunction doMousedown(e){\r\n    console.log(e);\r\n    let mouse=Object(_utilities_js__WEBPACK_IMPORTED_MODULE_1__[\"getMouse\"])(e);\r\n    console.log('canvas coordinates: x=${mouse.x} y=${mouse.y}');\r\n    switch(gameState){\r\n        case GameState.START:\r\n            currentLevel = 1;\r\n            gameState = GameState.MAIN;\r\n            loadLevel(currentLevel);\r\n            console.log(gameState);\r\n            break;\r\n            \r\n        case GameState.MAIN:\r\n\r\n            break;\r\n        case GameState.PAUSED:\r\n            \r\n            break;\r\n        case GameState.GAMEOVER:\r\n            \r\n            location.reload();\r\n            gameState = GameState.START;\r\n            break;\r\n            \r\n        default:\r\n            throw new Error(MyErrors.mousedownSwitch);\r\n    }\r\n}\r\n\r\nwindow.onkeyup = (e) => {\r\n    keys[e.keyCode] = false;\r\n    e.preventDefault();\r\n};\r\n\r\nwindow.onkeydown = (e)=>{\r\n    var char = String.fromCharCode(e.keyCode);\r\n//\tconsole.log(\"keydown=\" + e.keyCode);\r\n\tkeys[e.keyCode] = true;\r\n     if(keys[keyboard.SPACE]){\r\n       laserSound.play();\r\n       bullets.push(Object(_classes_js__WEBPACK_IMPORTED_MODULE_0__[\"fireBullets\"])(rectS,player.x + 15,player.y- 10, .3, \"images/centiBullet.png\"));\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\t\r\n\t// checking for other keys - ex. 'p' and 'P' for pausing\r\n};\r\n\r\nfunction fillText(ctx,string,x,y,css,color){\r\n    ctx.save();\r\n    ctx.font = css;\r\n    ctx.fillStyle = color;\r\n    ctx.fillText(string,x,y);\r\n    ctx.restore();\r\n}\r\n\r\nfunction strokeText(ctx,string,x,y,css,color,lineWidth){\r\n    ctx.save();\r\n    ctx.font = css;\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeText(string,x,y);\r\n    ctx.restore();\r\n}\r\n\r\nfunction remove(array, element){\r\n    const item = array.indexOf(element);\r\n    array.splice(item, 1);\r\n}\r\nfunction getRandom(max){\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n\r\n}\r\n\r\nfunction sound(src){\r\n    this.sound = document.createElement(\"audio\");\r\n    this.sound.src =src;\r\n    this.sound.setAttribute(\"preload\", \"auto\");\r\n    this.sound.setAttribute(\"controls\", \"none\");\r\n    this.sound.style.display = \"none\";\r\n    document.body.appendChild(this.sound);\r\n    this.play=function(){\r\n        this.sound.play();\r\n    }\r\n    this.stop=function(){\r\n        this.sound.pause();\r\n    }\r\n}\r\n\r\nfunction paused(){\r\n   gameState=GameState.PAUSED;\r\n}\r\nfunction play(){\r\n    gameState=GameState.MAIN;\r\n}\r\n\r\nfunction spawnMushrooms(){\r\n       for(let i=60;i<560;i+=20){\r\n        for(let j=100;j<600;j+=20){\r\n            rand = getRandom(50);\r\n            if(rand>45){\r\n               mushrooms.push(Object(_classes_js__WEBPACK_IMPORTED_MODULE_0__[\"createMushroomSprites\"])(rectS,i,j,20,20,\"images/depressedMush.png\")); \r\n            }    \r\n        }\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/main.js\n");

/***/ }),

/***/ "./js/tintChange.js":
/*!**************************!*\
  !*** ./js/tintChange.js ***!
  \**************************/
/*! exports provided: tintScreen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tintScreen\", function() { return tintScreen; });\n\r\n\r\nfunction tintScreen(ctx,canvas){\r\n    let imageData = ctx.getImageData(0,0,canvas.width,canvas.height);\r\n    \r\n    let data = imageData.data;\r\n    let length =  data.length;\r\n    let width = imageData.width;\r\n    let rand=Math.floor(Math.random() * Math.floor(255));\r\n    \r\n    for(let i = 0; i < length; i+=4){\r\n        data[i]=rand;\r\n        data[i+1]=rand;\r\n        data[i+2]=rand;\r\n    }\r\n    ctx.putImageData(imageData,0,0);\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy90aW50Q2hhbmdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vanMvdGludENoYW5nZS5qcz9mZjA4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHt0aW50U2NyZWVufVxyXG5cclxuZnVuY3Rpb24gdGludFNjcmVlbihjdHgsY2FudmFzKXtcclxuICAgIGxldCBpbWFnZURhdGEgPSBjdHguZ2V0SW1hZ2VEYXRhKDAsMCxjYW52YXMud2lkdGgsY2FudmFzLmhlaWdodCk7XHJcbiAgICBcclxuICAgIGxldCBkYXRhID0gaW1hZ2VEYXRhLmRhdGE7XHJcbiAgICBsZXQgbGVuZ3RoID0gIGRhdGEubGVuZ3RoO1xyXG4gICAgbGV0IHdpZHRoID0gaW1hZ2VEYXRhLndpZHRoO1xyXG4gICAgbGV0IHJhbmQ9TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5mbG9vcigyNTUpKTtcclxuICAgIFxyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSs9NCl7XHJcbiAgICAgICAgZGF0YVtpXT1yYW5kO1xyXG4gICAgICAgIGRhdGFbaSsxXT1yYW5kO1xyXG4gICAgICAgIGRhdGFbaSsyXT1yYW5kO1xyXG4gICAgfVxyXG4gICAgY3R4LnB1dEltYWdlRGF0YShpbWFnZURhdGEsMCwwKTtcclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./js/tintChange.js\n");

/***/ }),

/***/ "./js/utilities.js":
/*!*************************!*\
  !*** ./js/utilities.js ***!
  \*************************/
/*! exports provided: getMouse, getRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMouse\", function() { return getMouse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRandom\", function() { return getRandom; });\n\r\n\r\nfunction getMouse(e){\r\n    var mouse = {};\r\n    mouse.x = e.pageX - e.target.offsetLeft;\r\n    mouse.y = e.pageY - e.target.offsetWidth;\r\n    console.log(\"used\");\r\n    return mouse;\r\n}\r\n\r\nfunction getRandom(min, max) {\r\n\treturn Math.random() * (max - min) + min;\r\n}\r\n//function findDeltaTime(timeStamp){\r\n//    delta=timeStamp-lastTime\r\n//    delta\r\n//}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy91dGlsaXRpZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy91dGlsaXRpZXMuanM/ZDc4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2dldE1vdXNlLGdldFJhbmRvbX07XHJcblxyXG5mdW5jdGlvbiBnZXRNb3VzZShlKXtcclxuICAgIHZhciBtb3VzZSA9IHt9O1xyXG4gICAgbW91c2UueCA9IGUucGFnZVggLSBlLnRhcmdldC5vZmZzZXRMZWZ0O1xyXG4gICAgbW91c2UueSA9IGUucGFnZVkgLSBlLnRhcmdldC5vZmZzZXRXaWR0aDtcclxuICAgIGNvbnNvbGUubG9nKFwidXNlZFwiKTtcclxuICAgIHJldHVybiBtb3VzZTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0UmFuZG9tKG1pbiwgbWF4KSB7XHJcblx0cmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcclxufVxyXG4vL2Z1bmN0aW9uIGZpbmREZWx0YVRpbWUodGltZVN0YW1wKXtcclxuLy8gICAgZGVsdGE9dGltZVN0YW1wLWxhc3RUaW1lXHJcbi8vICAgIGRlbHRhXHJcbi8vfSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./js/utilities.js\n");

/***/ }),

/***/ 0:
/*!**************************************************************************************************************!*\
  !*** multi ./js/init.js ./js/classes.js ./js/main.js ./js/utilities.js ./js/collision.js ./js/tintChange.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./js/init.js */"./js/init.js");
__webpack_require__(/*! ./js/classes.js */"./js/classes.js");
__webpack_require__(/*! ./js/main.js */"./js/main.js");
__webpack_require__(/*! ./js/utilities.js */"./js/utilities.js");
__webpack_require__(/*! ./js/collision.js */"./js/collision.js");
module.exports = __webpack_require__(/*! ./js/tintChange.js */"./js/tintChange.js");


/***/ })

/******/ });